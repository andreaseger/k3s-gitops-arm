#!/usr/bin/env bash
set -e

export REPO_ROOT=$(git rev-parse --show-toplevel)

die() { echo "$*" 1>&2 ; exit 1; }

need() {
    which "$1" &>/dev/null || die "Binary '$1' is missing but required"
}

need "kubeseal"
need "kubectl"
need "sed"
need "envsubst"

set -o allexport
source "${REPO_ROOT}/secrets/.secrets.env"
set +o allexport

PUB_CERT="${REPO_ROOT}/secrets/pub-cert.pem"

echo "------------------------------------"
# Get the path and basename of the txt file
# e.g. "deployments/default/pihole/pihole-helm-values"
secret="$(dirname "$@")/$(basename -s .txt "$@")"
echo "Secret: ${secret}"
# Get the filename without extension
# e.g. "pihole-helm-values"
secret_name=$(basename "${secret}")
echo "Secret Name: ${secret_name}"
# Extract the Kubernetes namespace from the secret path
# e.g. default
namespace="$(echo "${secret}" | awk -F /deployments/ '{ print $2; }' | awk -F / '{ print $1; }')"
echo "Namespace: ${namespace}"
# Create secret and put it in the applications deployment folder
# e.g. "deployments/default/pihole/pihole-helm-values.yaml"
envsubst < "$@" | tee values.yaml \
| kubectl -n "${namespace}" create secret generic "${secret_name}" \
--from-file=values.yaml --dry-run=client -o json \
| kubeseal --format=yaml --cert="$PUB_CERT" \
> "${secret}.yaml"
# Clean up temp file
rm values.yaml